knitr::opts_chunk$set(echo = TRUE)
dataset <- read.csv("USJudgeRatings.csv")
head(dataset)
summary(dataset)
# Standardise the ratings
cont_scaled <- scale(dataset$CONT)
summary(cont_scaled)
# Standardise the ratings
dataset_scaled = scaled(dataset)
# Standardise the ratings
dataset_scaled <- scaled(dataset)
# Standardise the ratings
dataset_scaled <- scale(dataset)
class(dataset)
# Standardise the ratings
data_scale1 <- scale(dataset)
dataset
# Standardise the ratings
library(dplyr)
# Standardise the ratings
library(dplyr)
dataset %>% mutate(across(where(is.numeric),scale))
knitr::opts_chunk$set(echo = TRUE)
# Comparison of factor loadings from FA and PCA
cbind(factor3$loadings[,1:2], pca$rotations[, 1:2])
knitr::opts_chunk$set(echo = TRUE)
# Read in the data
dataset <- read.csv("USJudgeRatings.csv")
# Standardise the ratings
dataset_std <- data.frame(scale(dataset[,-1]))
# Perform Pricipal Component Analysis on the standardised dataset
pca <- prcomp(dataset_std)
# Use the scree plot
screeplot(pca)
# Get the percentage of variance explained by each component
summary(pca)
pca$rotation[, 1:2]
# Apply weights to INTG and DMNR
dataset_weighed <- dataset_std
dataset_weighed$INTG <- dataset_std$INTG * 5
dataset_weighed$DMNR <- dataset_std$DMNR * 5
# Run the principal component analysis on the weighed dataset
pca1 <- prcomp(dataset_weighed)
summary(pca1)
pca1$rotation[, 1:3]
factor3 <- factanal(dataset_std, factors = 3, scores= "regression",
rotation = "none", control=list(nstart=100))
factor3
factor4 <- factanal(dataset_std, factors = 4, scores = "regression", rotation = "none")
factor4
biplot(factor3$scores, factor3$loadings)
# Comparison of factor loadings from FA and PCA
cbind(factor3$loadings[,1:2], pca$rotations[, 1:2])
factor3_rotate <- factanal(dataset_std, factors = 3, rotation = "varimax",
scores = "regression", control=list(nstart=100))
factor3_rotate
biplot(factor3_rotate$scores, factor3_rotate$loadings)
# Comparison of factor loadings from FA and PCA
cbind(factor3$loadings[,1:2], pca$rotation[, 1:2])
plot.loadings(factor3_rotate)
plot(loadings(factor3_rotate))
plot(loadings(factor3_rotate), grey=TRUE)
plot(loadings(factor3_rotate))
factor3$uniquenesses
cov(factor3$loadings)
cov(factor3$correlation)
cov(factor3$loadings)
cov(factor3)
cov(factor3$uniquenesses)
factor3$
```
factor3$correlation
#Plots of FA vs PCA Loadings
par(mfrow=c(1,2))
plot(factor3$loadings[,1]~pca$rotation[,1],xlab='PCA Loading 1',ylab='FA loading 1')
plot(factor3$loadings[,2]~pca$rotation[,2],xlab='PCA Loading 2',ylab='FA loading 2')
factor3$e.values
eigen(factor3)
factor3$uniquenesses
plot(factor3_rotate$loadings[,1], factor3_rotate$loadings[,2], xlab = "Factor 1",
ylab = "Factor 2", ylim = c(-1,1), xlim = c(-1,1), main = "Varimax rotation")
plot(loadings(factor3_rotate))
plot(loadings(factor3_rotate))
text(factor3_rotate$loadings[,1]-0.08,
factor3_rotate$loadings[,2]+0.08,
colnames(dataset_std),
col="blue")
abline(h = 0, v = 0)
plot(loadings(factor3_rotate))
text(factor3_rotate$loadings[,1],
factor3_rotate$loadings[,2],
colnames(dataset_std),
col="blue")
abline(h = 0, v = 0)
