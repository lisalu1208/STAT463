knitr::opts_chunk$set(echo = TRUE)
# Read in data
dataset <- read.csv("Contraception315.csv")
# Convert District and urban variables into factor
dataset$district <- factor(dataset$district, levels = unique(dataset$district))
dataset$urban <- factor(dataset$urban, levels = unique(dataset$urban))
# Fit a Poisson Regression
poisson_model <- glm(formula = livch ~ district + use + urban + age,
data = dataset, family = poisson)
summary(poisson_model)
library(MASS)
# The minimum model
poisson_model1 <- glm(formula = livch ~ 1, family = poisson, data = dataset)
# Apply the backward selection
poisson_back <- stepAIC(poisson_model, direction = 'backward',
scope = list(upper = poisson_model,lower = poisson_model1))
summary(poisson_back)
summary(poisson_back)
library(dplyr)
dataset1 <- dataset %>%
mutate(child = case_when(livch == 0 ~ 0,
livch > 0 ~ 1))
head(dataset1)
model_lr <- glm(child ~ district + use + age + urban, data = dataset1, family = binomial())
summary(model_lr)
model_lr1 <- glm(child ~ 1, family = binomial(), data = dataset1)
# Apply the backward selection
model_lr_back <- stepAIC(model_lr, direction = 'backward',
scope = list(upper = model_lr,lower = model_lr1))
summary(model_lr_back)
str(dataset)
# Apply the backward selection
step(poisson_model, direction="forward",scope = list(lower = ~1, upper = poisson_model))
# Fit a Poisson Regression
poisson_model <- glm(formula = livch ~ district + use + urban + age,
data = dataset, family = poisson())
summary(poisson_model)
# Apply the backward selection
step(poisson_model, direction="forward",scope = list(lower = ~1, upper = poisson_model))
summary(poisson_back)
# Convert District variables into factor
dataset$district <- factor(dataset$district, levels = unique(dataset$district))
str(dataset)
# Fit a Poisson Regression
poisson_model <- glm(formula = livch ~ district + use + urban + age,
data = dataset, family = poisson())
summary(poisson_model)
library(MASS)
# Apply the backward selection
step(poisson_model, direction="forward",scope = list(lower = ~1, upper = poisson_model))
summary(poisson_back)
# Apply the backward selection
step(poisson_model, direction="backward",scope = list(lower = ~1, upper = poisson_model))
summary(poisson_back)
# Apply the backward selection
step(poisson_model, direction="backward",scope = list(lower = ~1, upper = poisson_model))
# Apply the backward selection
poisson1 <- stepAIC(poisson_model, scope = list(lower=~1, upper = poisson_model))
# Apply the backward selection
poisson1 <- stepAIC(poisson_model, direction = "backward", scope = list(lower=~1, upper = poisson_model))
summary(poisson1)
step(poisson_model, direction="backward",scope = list(lower = ~1, upper = poisson_model))
# Apply the backward selection
poisson1 <- stepAIC(livch ~ 1 , direction = "forward", scope = list(lower=~1, upper = poisson_model))
# Apply the backward selection
poisson1 <- stepAIC(livch= ~ 1 , direction = "forward", scope = list(lower=~1, upper = poisson_model))
# Apply the backward selection
step(poisson_model, direction="backward",scope = list(lower = ~1, upper = poisson_model))
# Apply the backward selection
poisson1 <- step(poisson_model, direction="backward",scope = list(lower = ~1, upper = poisson_model))
# Apply the backward selection
poisson1 <- step(poisson_model, direction="backward",scope = list(lower = ~1, upper = poisson_model))
summary(poisson1)
# Convert District variables into factor
# dataset$district <- factor(dataset$district, levels = unique(dataset$district))
dataset$district <- as.factor(dataset$district)
str(dataset)
# Fit a Poisson Regression
poisson_model <- glm(formula = livch ~ district + use + urban + age,
data = dataset, family = poisson())
summary(poisson_model)
dataset$district <- as.factor(dataset$district)
str(dataset)
# Fit a Poisson Regression
poisson_model <- glm(formula = livch ~ district + use + urban + age,
data = dataset, family = poisson())
summary(poisson_model)
# Read in data
dataset <- read.csv("Contraception315.csv")
# Convert District variables into factor
# dataset$district <- factor(dataset$district, levels = unique(dataset$district))
dataset$district <- as.factor(dataset$district)
str(dataset)
# Fit a Poisson Regression
poisson_model <- glm(formula = livch ~ district + use + urban + age,
data = dataset, family = poisson())
summary(poisson_model)
library(MASS)
# Apply the backward selection
poisson1 <- step(poisson_model, direction="backward",scope = list(lower = ~1, upper = poisson_model))
summary(poisson1)
summary(poisson_back)
library(dplyr)
dataset1 <- dataset %>%
mutate(child = case_when(livch == 0 ~ 0,
livch > 0 ~ 1))
head(dataset1)
model_lr <- glm(child ~ district + use + age + urban, data = dataset1, family = binomial())
summary(model_lr)
model_lr1 <- glm(child ~ 1, family = binomial(), data = dataset1)
# Apply the backward selection
model_lr_back <- stepAIC(model_lr, direction = 'backward',
scope = list(upper = model_lr,lower = model_lr1))
summary(model_lr_back)
knitr::opts_chunk$set(echo = TRUE)
# Read in data
dataset <- read.csv("Contraception315.csv")
# Convert District variables into factor
# dataset$district <- factor(dataset$district, levels = unique(dataset$district))
dataset$district <- as.factor(dataset$district)
str(dataset)
# Fit a Poisson Regression
poisson_model <- glm(formula = livch ~ district + use + urban + age,
data = dataset, family = poisson())
summary(poisson_model)
library(MASS)
# Apply the backward selection
poisson1 <- step(poisson_model, direction="backward",scope = list(lower = ~1, upper = poisson_model))
summary(poisson1)
summary(poisson_back)
library(dplyr)
dataset1 <- dataset %>%
mutate(child = case_when(livch == 0 ~ 0,
livch > 0 ~ 1))
head(dataset1)
model_lr <- glm(child ~ district + use + age + urban, data = dataset1, family = binomial())
summary(model_lr)
model_lr1 <- glm(child ~ 1, family = binomial(), data = dataset1)
# Apply the backward selection
model_lr_back <- stepAIC(model_lr, direction = 'backward',
scope = list(upper = model_lr,lower = model_lr1))
summary(model_lr_back)
# Apply the backward selection
poisson1 <- step(poisson_model)
summary(poisson1)
# Fit a Poisson Regression
poisson_model <- glm(formula = livch ~ district + use + urban + age,
data = dataset, family = poisson)
summary(poisson_model)
# Fit a Poisson Regression
poisson_model <- glm(formula = livch ~ district + use + urban + age,
data = dataset, family = poisson())
summary(poisson_model)
poisson2 <- glm(formula = livch ~ 1, data = dataset, family = poisson())
summary(poisson2)
step(poisson2, direction = "forward")
step(poisson2, direction = "forward", scope = list(lower = poisson2, upper = poisson_model))
summary(poisson2)
step(livch ~ 1, direction = "forward", scope = list(lower = poisson2, upper = poisson_model))
# Apply the forward selection
poisson_model <- step(formula = livch ~ 1, direction = "forward",
scope = list(lower = poisson2, upper = poisson_model))
poisson_model <- step(glm(livch ~ 1, family = poisson()), direction = "forward",
scope = list(lower = poisson2, upper = poisson_model))
poisson_model <- step(glm(livch ~ 1, data = dataset, family = poisson()), direction = "forward",
scope = list(lower = poisson2, upper = poisson_model))
poisson_model <- step(glm(livch ~ 1, data = dataset, family = poisson()), direction = "forward",
scope = list(lower = poisson2, upper = poisson_model))
summary(poisson_model)
poisson_model1 <- step(glm(livch ~ 1, data = dataset, family = poisson()), direction = "forward",
scope = list(lower = poisson2, upper = poisson_model))
summary(poisson_model1)
dataset1 <- dataset %>%
mutate(child = case_when(livch == 0 ~ 0,
livch > 0 ~ 1))
str(dataset1)
head(dataset1)
model_lr <- glm(child ~ district + use + age + urban, data = dataset1, family = binomial())
summary(model_lr)
model_lr <- glm(child ~ livch + district + use + age + urban, data = dataset1, family = binomial())
summary(model_lr)
model_lr <- glm(child ~ district + use + age + urban, data = dataset1, family = binomial())
summary(model_lr)
knitr::opts_chunk$set(echo = TRUE)
# Read in data
dataset <- read.csv("Contraception315.csv")
# Convert District variables into factor
# dataset$district <- factor(dataset$district, levels = unique(dataset$district))
dataset$district <- as.factor(dataset$district)
str(dataset)
# Fit a Poisson Regression
poisson_model <- glm(formula = livch ~ district + use + urban + age,
data = dataset, family = poisson())
summary(poisson_model)
library(MASS)
# Apply the forward selection
poisson_model1 <- step(glm(livch ~ 1, data = dataset, family = poisson()), direction = "forward",
scope = list(lower = poisson2, upper = poisson_model))
summary(poisson_model1)
summary(poisson_back)
library(dplyr)
dataset1 <- dataset %>%
mutate(child = case_when(livch == 0 ~ 0,
livch > 0 ~ 1))
head(dataset1)
model_lr <- glm(child ~ district + use + age + urban, data = dataset1, family = binomial())
summary(model_lr)
model_lr1 <- glm(child ~ 1, family = binomial(), data = dataset1)
# Apply the backward selection
model_lr_back <- stepAIC(model_lr, direction = 'backward',
scope = list(upper = model_lr,lower = model_lr1))
summary(model_lr_back)
model_lr <- glm(child ~ district + use + age + urban, data = dataset1, family = binomial())
summary(model_lr)
model_lr1 <- glm(child ~ 1, family = binomial(), data = dataset1)
# Apply the backward selection
model_lr_back <- stepAIC(model_lr, direction = 'backward',
scope = list(upper = model_lr,lower = model_lr1))
summary(model_lr_back)
# Fit a Poisson Regression
poisson_full <- glm(formula = livch ~ district + use + urban + age,
data = dataset, family = poisson())
summary(poisson_full)
# Apply the forward selection
poisson_null <- glm(livch ~ 1, data = dataset, family = poisson())
# Apply the forward selection
poisson_null <- glm(livch ~ 1, data = dataset, family = poisson())
poisson_model1 <- step(poisson_null, direction = "forward",
scope = list(lower = poisson_null, upper = poisson_full))
summary(poisson_model1)
lr_full <- glm(child ~ district + use + age + urban, data = dataset1, family = binomial())
summary(lr_full)
lr_null<- glm(child ~ 1, family = binomial(), data = dataset1)
# Apply the backward selection
lr1 <- step(lr_full, direction = 'backward',
scope = list(upper = lr_full,lower = lr_null))
summary(lr1)
# Apply the backward selection
lr1 <- stepAIC(lr_full, direction = 'backward',
scope = list(upper = lr_full,lower = lr_null))
summary(lr1)
View(model_lr_back)
pred_glm <- predict(poisson_model1, type = "response")
view(pred_glm)
summary(pred_glm)
head(pred_glm)
pred_lr <- predict(lr1, type="response")
View(pred_glm)
View(pred_lr)
pred_glm <- predict(poisson_model1, type = "response")
summary(pred_glm)
pred_lr <- predict(lr1, type="response")
summary(pred_lr)
df <- data.frame(pred_glm)
prob_glm <- 1 - e^(-pred_glm)
prob_glm <- 1 - exp(-pred_glm)
View(prob_glm)
prob_glm <- 1 - exp(-pred_glm) * 100
prob_glm <- (1 - exp(-pred_glm)) * 100
prob_glm <- (1 - exp(-pred_glm)) * 100
Summary(prob_glm)
summary(prob_glm)
summary(pred_lr)
prob_lr <- log(pred_lr, 1-pred_lr)
View(prob_lr)
prob_lr <- log(pred_lr, 1-pred_lr) * 100
View(prob_lr)
