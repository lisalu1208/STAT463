knitr::opts_chunk$set(echo = TRUE)
model_lr <- glm(child ~ district + use + age + urban + livch, data = dataset1, family = binomial())
knitr::opts_chunk$set(echo = TRUE)
# Read in data
dataset <- read.csv("Contraception315.csv")
# Fit a Poisson Regression
poisson_model <- glm(formula = livch ~ district + use + urban + age,
data = dataset, family = poisson)
summary(poisson_model)
library(MASS)
# The minimum model
poisson_model1 <- glm(formula = livch ~ 1, family = poisson, data = dataset)
# Apply the backward selection
poisson_back <- stepAIC(poisson_model, direction = 'backward',
scope = list(upper = poisson_model,lower = poisson_model1))
summary(poisson_back)
summary(poisson_back)
library(dplyr)
dataset1 <- dataset %>%
mutate(child = case_when(livch == 0 ~ 0,
livch > 0 ~ 1))
head(dataset1)
model_lr <- glm(child ~ district + use + age + urban + livch, data = dataset1, family = binomial())
summary(model_lr)
model_lr1 <- glm(child ~ 1, family = binomial(), data = dataset1)
# Apply the backward selection
model_lr_back <- stepAIC(model_lr, direction = 'backward',
scope = list(upper = model_lr,lower = model_lr1))
summary(model_lr_back)
model_lr <- glm(child ~ district + use + age + urban + livch, data = dataset1, family = binomial())
summary(model_lr)
model_lr <- glm(child ~ district + use + age + urban, data = dataset1, family = binomial())
summary(model_lr)
# Apply the backward selection
model_lr_back <- stepAIC(model_lr, direction = 'backward',
scope = list(upper = model_lr,lower = model_lr1))
# Read in data
dataset <- read.csv("Contraception315.csv")
dataset
# Convert District variable into factor
dataset[,district] <- lapply(dataset[,district], factor)
# Convert District variable into factor
dataset[,'district'] <- lapply(dataset[,'district'], factor)
dataset
# Convert District variable into factor
dataset$district <- factor(dataset$district)
str(dataset)
View(dataset)
# Convert District variable into factor
dataset$district <- factor(as.character(dataset$district))
View(dataset)
dataset$district <- as.factor(as.character(dataset$district))
View(dataset)
str(dataset)
# Convert District variable into factor
dataset$district <- as.factor(dataset$district)
str(dataset)
dataset$urban <- as.factor(dataset$urban)
str(dataset)
levels(dataset$district)
# age
age_res <- exp(poisson_model1$age)
# age
age_res <- exp(poisson_model1$coefficients[age])
poisson_model1
poisson_model1$coefficients
summary(poisson_model1)
# Read in data
dataset <- read.csv("Contraception315.csv")
# Convert District variable into factor
dataset$district <- as.factor(dataset$district)
str(dataset)
# Fit a Poisson Regression
poisson_full <- glm(formula = livch ~ district + use + urban + age,
data = dataset, family = poisson())
summary(poisson_full)
```
library(MASS)
# Apply the forward selection
poisson_null <- glm(livch ~ 1, data = dataset, family = poisson())
poisson_model1 <- step(poisson_null, direction = "forward",
scope = list(lower = poisson_null, upper = poisson_full))
summary(poisson_model1)
poisson_model1$coefficients
poisson_model1$coefficients[age]
poisson_model1$coefficients['age']
# age
age_res <- exp(poisson_model1$coefficients['age'])
# age
exp(poisson_model1$coefficients['age'])
summary(poisson_model1)
# use
exp(poisson_model1$coefficients['use'])
# Read in data
dataset <- read.csv("Contraception315.csv")
# Convert District variable into factor
dataset$district <- as.factor(dataset$district)
str(dataset)
# Fit a Poisson Regression
poisson_full <- glm(formula = livch ~ district + use + urban + age,
data = dataset, family = poisson())
summary(poisson_full)
library(MASS)
# Apply the forward selection
poisson_null <- glm(livch ~ 1, data = dataset, family = poisson())
poisson_model1 <- step(poisson_null, direction = "forward",
scope = list(lower = poisson_null, upper = poisson_full))
summary(poisson_model1)
# Age
age_response <- (exp(poisson_model1$coefficients['age']) - 1) * 100; age_response
# useY
use_response <- (exp(poisson_model1$coefficients['useY']) - 1) * 100; use_response
# urbanY
urban_response <- (exp(-poisson_model1$coefficients['urbanY']) - 1) * 100; urban_response
summary(poisson_model1)
library(dplyr)
dataset1 <- dataset %>%
mutate(child = case_when(livch == 0 ~ 0,
livch > 0 ~ 1))
head(dataset1)
lr_full <- glm(child ~ district + use + age + urban, data = dataset1, family = binomial())
summary(lr_full)
lr_null<- glm(child ~ 1, family = binomial(), data = dataset1)
# Apply the backward selection
lr1 <- stepAIC(lr_full, direction = 'backward',
scope = list(upper = lr_full,lower = lr_null))
summary(lr1)
pred_glm <- predict(poisson_model1, type = "response")
prob_glm <- (1 - exp(-pred_glm)) * 100
summary(prob_glm)
pred_lr <- predict(lr1, type="response")
prob_lr <- exp(pred_lr) / (1+exp(pred_lr)) * 100
summary(prob_lr)
poisson_model1$residuals
poisson_model1$df.residual
poisson_model1$effects
poisson_model1$deviance
poisson_model1$prior.weights
sd(poisson_model1)
# 95% confidence interval with SE of 0.0036
exp(poisson_model1$coefficients['age'] + 2 * 0.0036)
exp(poisson_model1$coefficients['age'] - 2 * 0.0036)
exp(poisson_model1$coefficients['age'] - 2 * 0.0036) - 1
exp(poisson_model1$coefficients['age'] + 2 * 0.0036) - 1
(exp(poisson_model1$coefficients['age'] - 2 * 0.0036) - 1) * 100
(exp(poisson_model1$coefficients['age'] + 2 * 0.0036) - 1) * 100
(exp(poisson_model1$coefficients['age'] - 2 * 0.0676) - 1) * 100
(exp(poisson_model1$coefficients['age'] + 2 * 0.0676) - 1) * 100
(exp(poisson_model1$coefficients['useY'] - 2 * 0.0676) - 1) * 100
(exp(poisson_model1$coefficients['useY'] + 2 * 0.0676) - 1) * 100
(exp(poisson_model1$coefficients['urbanY'] - 2 * 0.0788) - 1) * 100
(exp(poisson_model1$coefficients['urbanY'] + 2 * 0.0788) - 1) * 100
(exp(-poisson_model1$coefficients['urbanY'] - 2 * 0.0788) - 1) * 100
(exp(-poisson_model1$coefficients['urbanY'] + 2 * 0.0788) - 1) * 100
summary(poisson_full)
summary(poisson_model1)
summary(livch)
summary(dataset$livch)
summary(dataset)
summary(dataset[,2:5])
summary(dataset[,1:5])
summary(dataset[])
summary(dataset[,2:6])
anova(poisson_model1, lr1, test = "Chisq")
anova(poisson_model1, poisson_null, test = "Chisq")
anova(poisson_null, poisson_model1, test = "Chisq")
poisson_model2 <- step(poisson_full, direction = "backward",
scope = list(lower = poisson_null, upper = poisson_full))
summary(poisson_model2)
summary(poisson_model1)
summary(poisson_model2)
summary(poisson_model1)
poisson_model1 <- step(poisson_full, direction = "backward")
summary(poisson_model1)
plot(poisson_model1)
plot(pred_glm)
plot(dataset, pred_glm)
hist(dataset$livch)
plot(prob_glm, prob_lr)
abline(a = 0, b = 1)
plot(prob_glm, prob_lr)
abline(a = 0, b = 1)
plot(prob_glm, prob_lr)
abline(h=1)
plot(prob_glm, prob_lr)
abline(a = 0, b = 1)
pred_glm <- predict(poisson_model1, type = "response")
prob_glm <- 1 - exp(-pred_glm)
summary(prob_glm)
pred_lr <- predict(lr1, type="response")
prob_lr <- exp(pred_lr) / 1+exp(pred_lr)
summary(prob_lr)
plot(prob_glm, prob_lr)
abline(a = 0, b = 1)
abline(a = 0, b = 1)
plot(prob_glm, prob_lr)
abline(a = 0, b = 1)
plot(prob_glm, prob_lr, col = c('red', 'blue'))
abline(a = 0, b = 1)
plot(prob_glm, prob_lr, col = c('red', 'blue'))
abline(a = 0, b = 0.5)
mean(dataset$livch)
hist(dataset$livch)
pred_glm <- predict(poisson_model1, type = "response")
prob_glm <- (1 - exp(-pred_glm)) * 100
summary(prob_glm)
pred_lr <- predict(lr1, type="response")
prob_lr <- (exp(pred_lr) / 1+exp(pred_lr)) * 100
summary(prob_lr)
pred_glm <- predict(poisson_model1, type = "response")
prob_glm <- (1 - exp(-pred_glm)) * 100
summary(prob_glm)
pred_lr <- predict(lr1, type="response")
prob_lr <- exp(pred_lr) / 1+exp(pred_lr)
summary(prob_lr)
pred_lr <- predict(lr1, type="response")
prob_lr <- exp(pred_lr) / (1+exp(pred_lr)) * 100
summary(prob_lr)
plot(prob_glm, prob_lr, col = c('red', 'blue'))
abline(a = 0, b = 0.5)
plot(prob_glm, prob_lr, col = c('red', 'blue'))
abline(a = 0, b = 1)
plot(prob_glm, prob_lr, col = c('red', 'blue'))
abline(a = 0, b = 0.75)
plot(prob_glm, prob_lr, col = c('red', 'blue'))
abline(a = 0, b = 1)
plot(prob_glm, prob_lr, col = c('red', 'blue'))
var(dataset$livch)
mean(dataset$livch)
var(dataset$livch)
pred_pois <- predict(poisson_model1, type = "response")
prob_pois <- (1 - exp(-pred_glm)) * 100
summary(prob_pois)
pred_lr <- predict(lr1, type="response")
prob_lr <- exp(pred_lr) / (1+exp(pred_lr)) * 100
summary(prob_lr)
plot(prob_pois, prob_lr, col = c('red', 'blue'))
plot(prob_pois, prob_lr, col = c('red', 'blue'))
abline(0,1)
plot(prob_pois, prob_lr, col = c('red', 'blue'))
abline(1,1)
plot(prob_pois, prob_lr, col = c('red', 'blue'))
abline(0,1)
plot(prob_pois, prob_lr, col = c('red', 'blue'))
abline(1,1)
