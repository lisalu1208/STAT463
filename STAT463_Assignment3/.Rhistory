knitr::opts_chunk$set(echo = TRUE)
poisson_model1 <- glm(formula = livch ~ ., family = poisson, data = dataset)
# Read in data
dataset <- read.csv("Contraception315.csv")
# Fit a Poisson Regression
poisson_model <- glm(formula = livch ~ district + use + urban, data = dataset, family = poisson)
poisson_model1 <- glm(formula = livch ~ ., family = poisson, data = dataset)
summary(poisson_model1)
poisson_model1 <- glm(formula = livch ~ 1, family = poisson, data = dataset)
summary(poisson_model1)
# Apply the forward selection
summary(stepAIC(poisson_model1, direction = 'forward', scope = list(upper = poisson_model,lower = poisson_model1)))
library(MASS)
# The minimum model
poisson_model1 <- glm(formula = livch ~ 1, family = poisson, data = dataset)
# Apply the forward selection
summary(stepAIC(poisson_model1, direction = 'forward', scope = list(upper = poisson_model,lower = poisson_model1)))
summary(stepAIC(poisson_model, direction = 'backward', scope = list(upper = poisson_model,lower = poisson_model1)))
knitr::opts_chunk$set(echo = TRUE)
# Read in data
dataset <- read.csv("Contraception315.csv")
# Fit a Poisson Regression
poisson_model <- glm(formula = livch ~ district + use + urban, data = dataset, family = poisson)
library(MASS)
# The minimum model
poisson_model1 <- glm(formula = livch ~ 1, family = poisson, data = dataset)
# Apply the forward selection
summary(stepAIC(poisson_model1, direction = 'forward',
scope = list(upper = poisson_model,lower = poisson_model1)))
summary(stepAIC(poisson_model, direction = 'backward',
scope = list(upper = poisson_model,lower = poisson_model1)))
model <- stepAIC(poisson_model, direction = 'backward',
scope = list(upper = poisson_model,lower = poisson_model1))
summary(model)
dataset %>%
mutate(child = case_when(livch = 0 ~ 0,
livch > 0 ~ 1))
library(dplyr)
dataset %>%
mutate(child = case_when(livch = 0 ~ 0,
livch > 0 ~ 1))
dataset %>%
mutate(child = case_when(livch = 0 ~ "0",
livch > 0 ~ "1"))
dataset %>%
mutate(child = case_when(livch == 0 ~ "0",
livch > 0 ~ "1"))
```{r,warning=FALSE, message=FALSE}
head(dataset1)
View(dataset1)
dataset1 <- dataset %>%
mutate(child = case_when(livch == 0 ~ 0,
livch > 0 ~ 1))
head(dataset1)
model_lr <- glm(child ~ ., data = dataset1, family = binomial())
dataset1
View(dataset1)
summary(model_lr)
model_lr <- glm(child ~ ., data = dataset1, family = binomial(link = "logit"))
summary(model_lr)
model_lr <- glm(child ~ district + use + livch + age + urban, data = dataset1, family = binomial(link = "logit"))
summary(model_lr)
model_lr <- glm(child ~ district + use + age + urban, data = dataset1, family = binomial(link = "logit"))
summary(model_lr)
model_lr <- glm(child ~ district + use + livch + age + urban, data = dataset1, family = binomial(link = "logit"))
model_lr <- glm(child ~ district + use + age + urban, data = dataset1, family = binomial(link = "logit"))
model_lr <- glm(child ~ district + use + age + urban, data = dataset1, family = binomial())
model_lr1 <- glm(child ~ 1, family = binomial(), data = dataset1)
# Apply the forward selection
summary(stepAIC(model_lr, direction = 'backward',
scope = list(upper = model_lr,lower = model_lr1)))
summary(stepAIC(model_lr1, direction = 'forward',
scope = list(upper = model_lr,lower = model_lr1)))
# Fit a Poisson Regression
poisson_model <- glm(formula = livch ~ district + use + urban + age, data = dataset, family = poisson)
summary(poisson_model)
summary(poisson_model)
# The minimum model
poisson_model1 <- glm(formula = livch ~ 1, family = poisson, data = dataset)
# Apply the forward selection
summary(stepAIC(poisson_model1, direction = 'forward',
scope = list(upper = poisson_model,lower = poisson_model1)))
summary(stepAIC(poisson_model, direction = 'backward',
scope = list(upper = poisson_model,lower = poisson_model1)))
# Apply the backward selection
summary(stepAIC(poisson_model, direction = 'backward',
scope = list(upper = poisson_model,lower = poisson_model1)))
model <- stepAIC(poisson_model, direction = 'backward',
scope = list(upper = poisson_model,lower = poisson_model1))
# Apply the backward selection
poisson_back <- stepAIC(poisson_model, direction = 'backward',
scope = list(upper = poisson_model,lower = poisson_model1))
summary(poisson_back)
summary(poisson_back$residuals)
summary(poisson_back$deviance)
summary(poisson_back)
# Apply the backward selection
model_lr_back <- stepAIC(model_lr, direction = 'backward',
scope = list(upper = model_lr,lower = model_lr1))
summary(model_lr_back)
